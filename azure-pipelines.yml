# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  project: '**/FocusSquad.Api.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Install dotnet-ef'
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install --global dotnet-ef --version 8'

# - task: DotNetCoreCLI@2
#   displayName: Generate EF Core Migrations SQL script
#   inputs:
#     command: 'custom'
#     custom: 'ef'
#     arguments: 'migrations script --project ./FocusSquad.Infrastructure.Migrations --startup-project ./Server -o $(Build.ArtifactStagingDirectory)/migrationScript.sql --idempotent --no-build --configuration $(buildConfiguration)'

# - task: DotNetCoreCLI@2
#   name: 'Tests'
#   displayName: 'Run tests'
#   inputs:
#     command: 'test'
#     projects: '**/FocusSquad.Test.csproj'
#     arguments: '--configuration $(BuildConfiguration)'
 
- task: DotNetCoreCLI@2
  name: 'Publish'
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(project)'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true
 
- task: PublishBuildArtifacts@1
  name: 'PublishBuildArtifacts'
  displayName: 'Publish build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'FocusSquadApiArtifact'
    publishLocation: 'Container'
